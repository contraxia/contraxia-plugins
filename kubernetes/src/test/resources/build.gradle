plugins {
	id 'helm'
	id 'kubectl'
	id 'oc'
}
version = '0.1.0'
repositories {
	maven {
		mavenCentral()
	}
}

import com.github.rmee.kubernetes.oc.OcExec
import com.github.rmee.kubernetes.kubectl.KubectlExec
import com.github.rmee.kubernetes.helm.HelmExec

//////////////////////////////////////////////////////////////////
// oc
//////////////////////////////////////////////////////////////////


apply plugin: 'oc'
oc {
	projectName = 'rmee-demo-app'
	url = 'https://api.starter-us-west-2.openshift.com'
	credentials {
		token = System.env['OPENSHIFT_TOKEN']

		if (!token) {
			logger.error("add OPENSHIFT_TOKEN to env variables")
		}
	}
}

task ocDeleteProject(type: OcExec) {
	dependsOn ocLogin
	group = 'provision'
	commandLine "oc delete project ${oc.projectName}"
}

task ocSetupTiller(type: OcExec) {
	dependsOn ocLogin
	group = 'provision'
	mustRunAfter ocNewProject
	commandLine "oc process -f ${file('tiller-template.yaml')} -p TILLER_NAMESPACE=${oc.projectName} | oc apply -f -"
}

task ocAuthorizeTiller(type: OcExec) {
	dependsOn ocLogin
	ignoreExitValue = true // FIXME for whatever reason it is not working between oc and travis, works locally
	group = 'provision'
	mustRunAfter ocSetupTiller
	commandLine "oc policy add-role-to-user edit \"system:serviceaccount:${oc.projectName}:tiller\""
}

task ocSetup {
	dependsOn ocSetupTiller, ocAuthorizeTiller
}

task ocWaitForTiller(type: OcExec) {
	dependsOn ocLogin
	group = 'provision'
	commandLine "oc rollout status deployment tiller"
}

//////////////////////////////////////////////////////////////////
// helm
//////////////////////////////////////////////////////////////////


apply plugin: 'helm'

helm {
	tillerNamespace = oc.projectName
}

task helmStatus(type: HelmExec) {
	dependsOn ocLogin, helmPackage
	commandLine "helm status demo"
}

task helmInstall(type: HelmExec) {
	dependsOn ocLogin, helmPackage
	commandLine "helm upgrade --install demo ${helmPackage.outputs.files.singleFile}"
}

task helmClientVersion(type: HelmExec) {
	dependsOn helmBootstrap
	commandLine "helm version -c"
}

//////////////////////////////////////////////////////////////////
// kubectl
//////////////////////////////////////////////////////////////////

apply plugin: 'kubectl'
kubectl {
	namespace = oc.projectName
	url = oc.url
	credentials {
		token = oc.credentials.token
	}
}

task kubectlWaitForTiller(type: KubectlExec) {
	group = 'provision'
	commandLine "kubectl rollout status deployment tiller"
}